// Code generated from java-escape by ANTLR 4.11.1. DO NOT EDIT.

package compiler

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr/v4"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type preludioLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var preludiolexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func preludiolexerLexerInit() {
	staticData := &preludiolexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "'func'", "'prql'", "'let'", "'->'", "'='", "'+'", "'-'", "'*'",
		"'**'", "'/'", "'%'", "'~'", "'=='", "'!='", "'<='", "'>='", "'|'",
		"':'", "','", "'.'", "'$'", "'..'", "'<'", "'>'", "'['", "']'", "'('",
		"')'", "'_'", "'`'", "'\"'", "'''", "'\"\"\"'", "'''''", "'and'", "'or'",
		"'not'", "'??'", "'null'",
	}
	staticData.symbolicNames = []string{
		"", "FUNC", "PRQL", "LET", "ARROW", "ASSIGN", "PLUS", "MINUS", "STAR",
		"POW", "DIV", "MOD", "MODEL", "EQ", "NE", "LE", "GE", "BAR", "COLON",
		"COMMA", "DOT", "DOLLAR", "RANGE", "LANG", "RANG", "LBRACKET", "RBRACKET",
		"LPAREN", "RPAREN", "UNDERSCORE", "BACKTICK", "DOUBLE_QUOTE", "SINGLE_QUOTE",
		"TRIPLE_DOUBLE_QUOTE", "TRIPLE_SINGLE_QUOTE", "AND", "OR", "NOT", "COALESCE",
		"NULL_", "BOOLEAN", "INTEGER", "FLOAT", "IDENT", "IDENT_START", "IDENT_NEXT",
		"WHITESPACE", "NEWLINE", "COMMENT", "INTERVAL_KIND", "STRING",
	}
	staticData.ruleNames = []string{
		"FUNC", "PRQL", "LET", "ARROW", "ASSIGN", "PLUS", "MINUS", "STAR", "POW",
		"DIV", "MOD", "MODEL", "EQ", "NE", "LE", "GE", "BAR", "COLON", "COMMA",
		"DOT", "DOLLAR", "RANGE", "LANG", "RANG", "LBRACKET", "RBRACKET", "LPAREN",
		"RPAREN", "UNDERSCORE", "BACKTICK", "DOUBLE_QUOTE", "SINGLE_QUOTE",
		"TRIPLE_DOUBLE_QUOTE", "TRIPLE_SINGLE_QUOTE", "AND", "OR", "NOT", "COALESCE",
		"NULL_", "BOOLEAN", "DIGIT", "LETTER", "EXP", "INTEGER", "FLOAT", "IDENT",
		"IDENT_START", "IDENT_NEXT", "WHITESPACE", "NEWLINE", "COMMENT", "INTERVAL_KIND",
		"STRING", "ESC", "UNICODE_ESCAPE", "OCTAL_ESCAPE", "HEX_ESCAPE", "HEXDIGIT",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 50, 455, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
		1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 5, 1, 5, 1, 6, 1, 6,
		1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 10, 1, 10, 1, 11, 1, 11, 1,
		12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15,
		1, 15, 1, 16, 1, 16, 1, 17, 1, 17, 1, 18, 1, 18, 1, 19, 1, 19, 1, 20, 1,
		20, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 23, 1, 23, 1, 24, 1, 24, 1, 25,
		1, 25, 1, 26, 1, 26, 1, 27, 1, 27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 30, 1,
		30, 1, 31, 1, 31, 1, 32, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 33,
		1, 34, 1, 34, 1, 34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 36, 1, 36, 1, 36, 1,
		36, 1, 37, 1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 39, 1, 39,
		1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 3, 39, 233, 8, 39, 1,
		40, 1, 40, 1, 41, 1, 41, 1, 42, 1, 42, 3, 42, 241, 8, 42, 1, 42, 1, 42,
		1, 43, 4, 43, 246, 8, 43, 11, 43, 12, 43, 247, 1, 44, 4, 44, 251, 8, 44,
		11, 44, 12, 44, 252, 1, 44, 1, 44, 5, 44, 257, 8, 44, 10, 44, 12, 44, 260,
		9, 44, 1, 44, 3, 44, 263, 8, 44, 1, 44, 4, 44, 266, 8, 44, 11, 44, 12,
		44, 267, 1, 44, 3, 44, 271, 8, 44, 1, 44, 1, 44, 4, 44, 275, 8, 44, 11,
		44, 12, 44, 276, 1, 44, 3, 44, 280, 8, 44, 3, 44, 282, 8, 44, 1, 45, 1,
		45, 1, 45, 1, 45, 5, 45, 288, 8, 45, 10, 45, 12, 45, 291, 9, 45, 1, 46,
		1, 46, 1, 46, 3, 46, 296, 8, 46, 1, 46, 1, 46, 1, 46, 5, 46, 301, 8, 46,
		10, 46, 12, 46, 304, 9, 46, 1, 47, 1, 47, 3, 47, 308, 8, 47, 1, 48, 1,
		48, 1, 48, 1, 48, 1, 49, 3, 49, 315, 8, 49, 1, 49, 1, 49, 1, 50, 1, 50,
		5, 50, 321, 8, 50, 10, 50, 12, 50, 324, 9, 50, 1, 50, 1, 50, 1, 51, 1,
		51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51,
		1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1,
		51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51,
		1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1,
		51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51,
		1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 3, 51, 391,
		8, 51, 1, 52, 1, 52, 1, 52, 5, 52, 396, 8, 52, 10, 52, 12, 52, 399, 9,
		52, 1, 52, 1, 52, 1, 52, 1, 52, 5, 52, 405, 8, 52, 10, 52, 12, 52, 408,
		9, 52, 1, 52, 3, 52, 411, 8, 52, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 3,
		53, 418, 8, 53, 1, 54, 1, 54, 1, 54, 1, 54, 1, 54, 1, 54, 1, 54, 1, 54,
		1, 54, 1, 54, 1, 54, 1, 54, 1, 54, 1, 54, 1, 54, 1, 54, 3, 54, 436, 8,
		54, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 3, 55,
		447, 8, 55, 1, 56, 1, 56, 1, 56, 3, 56, 452, 8, 56, 1, 57, 1, 57, 2, 397,
		406, 0, 58, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19,
		10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37,
		19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55,
		28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73,
		37, 75, 38, 77, 39, 79, 40, 81, 0, 83, 0, 85, 0, 87, 41, 89, 42, 91, 43,
		93, 44, 95, 45, 97, 46, 99, 47, 101, 48, 103, 49, 105, 50, 107, 0, 109,
		0, 111, 0, 113, 0, 115, 0, 1, 0, 12, 1, 0, 48, 57, 2, 0, 65, 90, 97, 122,
		2, 0, 69, 69, 101, 101, 2, 0, 43, 43, 45, 45, 2, 0, 9, 9, 32, 32, 2, 0,
		10, 10, 13, 13, 2, 0, 34, 34, 92, 92, 2, 0, 39, 39, 92, 92, 9, 0, 34, 34,
		39, 39, 92, 92, 97, 98, 102, 102, 110, 110, 114, 114, 116, 116, 118, 118,
		1, 0, 48, 51, 1, 0, 48, 55, 3, 0, 48, 57, 65, 70, 97, 102, 487, 0, 1, 1,
		0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1,
		0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17,
		1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0,
		25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0,
		0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0,
		0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0,
		0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1,
		0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63,
		1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0,
		71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0,
		0, 79, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0,
		0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0,
		0, 0, 0, 101, 1, 0, 0, 0, 0, 103, 1, 0, 0, 0, 0, 105, 1, 0, 0, 0, 1, 117,
		1, 0, 0, 0, 3, 122, 1, 0, 0, 0, 5, 127, 1, 0, 0, 0, 7, 131, 1, 0, 0, 0,
		9, 134, 1, 0, 0, 0, 11, 136, 1, 0, 0, 0, 13, 138, 1, 0, 0, 0, 15, 140,
		1, 0, 0, 0, 17, 142, 1, 0, 0, 0, 19, 145, 1, 0, 0, 0, 21, 147, 1, 0, 0,
		0, 23, 149, 1, 0, 0, 0, 25, 151, 1, 0, 0, 0, 27, 154, 1, 0, 0, 0, 29, 157,
		1, 0, 0, 0, 31, 160, 1, 0, 0, 0, 33, 163, 1, 0, 0, 0, 35, 165, 1, 0, 0,
		0, 37, 167, 1, 0, 0, 0, 39, 169, 1, 0, 0, 0, 41, 171, 1, 0, 0, 0, 43, 173,
		1, 0, 0, 0, 45, 176, 1, 0, 0, 0, 47, 178, 1, 0, 0, 0, 49, 180, 1, 0, 0,
		0, 51, 182, 1, 0, 0, 0, 53, 184, 1, 0, 0, 0, 55, 186, 1, 0, 0, 0, 57, 188,
		1, 0, 0, 0, 59, 190, 1, 0, 0, 0, 61, 192, 1, 0, 0, 0, 63, 194, 1, 0, 0,
		0, 65, 196, 1, 0, 0, 0, 67, 200, 1, 0, 0, 0, 69, 204, 1, 0, 0, 0, 71, 208,
		1, 0, 0, 0, 73, 211, 1, 0, 0, 0, 75, 215, 1, 0, 0, 0, 77, 218, 1, 0, 0,
		0, 79, 232, 1, 0, 0, 0, 81, 234, 1, 0, 0, 0, 83, 236, 1, 0, 0, 0, 85, 238,
		1, 0, 0, 0, 87, 245, 1, 0, 0, 0, 89, 281, 1, 0, 0, 0, 91, 283, 1, 0, 0,
		0, 93, 295, 1, 0, 0, 0, 95, 307, 1, 0, 0, 0, 97, 309, 1, 0, 0, 0, 99, 314,
		1, 0, 0, 0, 101, 318, 1, 0, 0, 0, 103, 390, 1, 0, 0, 0, 105, 410, 1, 0,
		0, 0, 107, 417, 1, 0, 0, 0, 109, 435, 1, 0, 0, 0, 111, 446, 1, 0, 0, 0,
		113, 448, 1, 0, 0, 0, 115, 453, 1, 0, 0, 0, 117, 118, 5, 102, 0, 0, 118,
		119, 5, 117, 0, 0, 119, 120, 5, 110, 0, 0, 120, 121, 5, 99, 0, 0, 121,
		2, 1, 0, 0, 0, 122, 123, 5, 112, 0, 0, 123, 124, 5, 114, 0, 0, 124, 125,
		5, 113, 0, 0, 125, 126, 5, 108, 0, 0, 126, 4, 1, 0, 0, 0, 127, 128, 5,
		108, 0, 0, 128, 129, 5, 101, 0, 0, 129, 130, 5, 116, 0, 0, 130, 6, 1, 0,
		0, 0, 131, 132, 5, 45, 0, 0, 132, 133, 5, 62, 0, 0, 133, 8, 1, 0, 0, 0,
		134, 135, 5, 61, 0, 0, 135, 10, 1, 0, 0, 0, 136, 137, 5, 43, 0, 0, 137,
		12, 1, 0, 0, 0, 138, 139, 5, 45, 0, 0, 139, 14, 1, 0, 0, 0, 140, 141, 5,
		42, 0, 0, 141, 16, 1, 0, 0, 0, 142, 143, 5, 42, 0, 0, 143, 144, 5, 42,
		0, 0, 144, 18, 1, 0, 0, 0, 145, 146, 5, 47, 0, 0, 146, 20, 1, 0, 0, 0,
		147, 148, 5, 37, 0, 0, 148, 22, 1, 0, 0, 0, 149, 150, 5, 126, 0, 0, 150,
		24, 1, 0, 0, 0, 151, 152, 5, 61, 0, 0, 152, 153, 5, 61, 0, 0, 153, 26,
		1, 0, 0, 0, 154, 155, 5, 33, 0, 0, 155, 156, 5, 61, 0, 0, 156, 28, 1, 0,
		0, 0, 157, 158, 5, 60, 0, 0, 158, 159, 5, 61, 0, 0, 159, 30, 1, 0, 0, 0,
		160, 161, 5, 62, 0, 0, 161, 162, 5, 61, 0, 0, 162, 32, 1, 0, 0, 0, 163,
		164, 5, 124, 0, 0, 164, 34, 1, 0, 0, 0, 165, 166, 5, 58, 0, 0, 166, 36,
		1, 0, 0, 0, 167, 168, 5, 44, 0, 0, 168, 38, 1, 0, 0, 0, 169, 170, 5, 46,
		0, 0, 170, 40, 1, 0, 0, 0, 171, 172, 5, 36, 0, 0, 172, 42, 1, 0, 0, 0,
		173, 174, 5, 46, 0, 0, 174, 175, 5, 46, 0, 0, 175, 44, 1, 0, 0, 0, 176,
		177, 5, 60, 0, 0, 177, 46, 1, 0, 0, 0, 178, 179, 5, 62, 0, 0, 179, 48,
		1, 0, 0, 0, 180, 181, 5, 91, 0, 0, 181, 50, 1, 0, 0, 0, 182, 183, 5, 93,
		0, 0, 183, 52, 1, 0, 0, 0, 184, 185, 5, 40, 0, 0, 185, 54, 1, 0, 0, 0,
		186, 187, 5, 41, 0, 0, 187, 56, 1, 0, 0, 0, 188, 189, 5, 95, 0, 0, 189,
		58, 1, 0, 0, 0, 190, 191, 5, 96, 0, 0, 191, 60, 1, 0, 0, 0, 192, 193, 5,
		34, 0, 0, 193, 62, 1, 0, 0, 0, 194, 195, 5, 39, 0, 0, 195, 64, 1, 0, 0,
		0, 196, 197, 5, 34, 0, 0, 197, 198, 5, 34, 0, 0, 198, 199, 5, 34, 0, 0,
		199, 66, 1, 0, 0, 0, 200, 201, 5, 39, 0, 0, 201, 202, 5, 39, 0, 0, 202,
		203, 5, 39, 0, 0, 203, 68, 1, 0, 0, 0, 204, 205, 5, 97, 0, 0, 205, 206,
		5, 110, 0, 0, 206, 207, 5, 100, 0, 0, 207, 70, 1, 0, 0, 0, 208, 209, 5,
		111, 0, 0, 209, 210, 5, 114, 0, 0, 210, 72, 1, 0, 0, 0, 211, 212, 5, 110,
		0, 0, 212, 213, 5, 111, 0, 0, 213, 214, 5, 116, 0, 0, 214, 74, 1, 0, 0,
		0, 215, 216, 5, 63, 0, 0, 216, 217, 5, 63, 0, 0, 217, 76, 1, 0, 0, 0, 218,
		219, 5, 110, 0, 0, 219, 220, 5, 117, 0, 0, 220, 221, 5, 108, 0, 0, 221,
		222, 5, 108, 0, 0, 222, 78, 1, 0, 0, 0, 223, 224, 5, 116, 0, 0, 224, 225,
		5, 114, 0, 0, 225, 226, 5, 117, 0, 0, 226, 233, 5, 101, 0, 0, 227, 228,
		5, 102, 0, 0, 228, 229, 5, 97, 0, 0, 229, 230, 5, 108, 0, 0, 230, 231,
		5, 115, 0, 0, 231, 233, 5, 101, 0, 0, 232, 223, 1, 0, 0, 0, 232, 227, 1,
		0, 0, 0, 233, 80, 1, 0, 0, 0, 234, 235, 7, 0, 0, 0, 235, 82, 1, 0, 0, 0,
		236, 237, 7, 1, 0, 0, 237, 84, 1, 0, 0, 0, 238, 240, 7, 2, 0, 0, 239, 241,
		7, 3, 0, 0, 240, 239, 1, 0, 0, 0, 240, 241, 1, 0, 0, 0, 241, 242, 1, 0,
		0, 0, 242, 243, 3, 87, 43, 0, 243, 86, 1, 0, 0, 0, 244, 246, 3, 81, 40,
		0, 245, 244, 1, 0, 0, 0, 246, 247, 1, 0, 0, 0, 247, 245, 1, 0, 0, 0, 247,
		248, 1, 0, 0, 0, 248, 88, 1, 0, 0, 0, 249, 251, 3, 81, 40, 0, 250, 249,
		1, 0, 0, 0, 251, 252, 1, 0, 0, 0, 252, 250, 1, 0, 0, 0, 252, 253, 1, 0,
		0, 0, 253, 254, 1, 0, 0, 0, 254, 258, 3, 39, 19, 0, 255, 257, 3, 81, 40,
		0, 256, 255, 1, 0, 0, 0, 257, 260, 1, 0, 0, 0, 258, 256, 1, 0, 0, 0, 258,
		259, 1, 0, 0, 0, 259, 262, 1, 0, 0, 0, 260, 258, 1, 0, 0, 0, 261, 263,
		3, 85, 42, 0, 262, 261, 1, 0, 0, 0, 262, 263, 1, 0, 0, 0, 263, 282, 1,
		0, 0, 0, 264, 266, 3, 81, 40, 0, 265, 264, 1, 0, 0, 0, 266, 267, 1, 0,
		0, 0, 267, 265, 1, 0, 0, 0, 267, 268, 1, 0, 0, 0, 268, 270, 1, 0, 0, 0,
		269, 271, 3, 85, 42, 0, 270, 269, 1, 0, 0, 0, 270, 271, 1, 0, 0, 0, 271,
		282, 1, 0, 0, 0, 272, 274, 3, 39, 19, 0, 273, 275, 3, 81, 40, 0, 274, 273,
		1, 0, 0, 0, 275, 276, 1, 0, 0, 0, 276, 274, 1, 0, 0, 0, 276, 277, 1, 0,
		0, 0, 277, 279, 1, 0, 0, 0, 278, 280, 3, 85, 42, 0, 279, 278, 1, 0, 0,
		0, 279, 280, 1, 0, 0, 0, 280, 282, 1, 0, 0, 0, 281, 250, 1, 0, 0, 0, 281,
		265, 1, 0, 0, 0, 281, 272, 1, 0, 0, 0, 282, 90, 1, 0, 0, 0, 283, 289, 3,
		93, 46, 0, 284, 285, 3, 39, 19, 0, 285, 286, 3, 95, 47, 0, 286, 288, 1,
		0, 0, 0, 287, 284, 1, 0, 0, 0, 288, 291, 1, 0, 0, 0, 289, 287, 1, 0, 0,
		0, 289, 290, 1, 0, 0, 0, 290, 92, 1, 0, 0, 0, 291, 289, 1, 0, 0, 0, 292,
		296, 3, 83, 41, 0, 293, 296, 3, 41, 20, 0, 294, 296, 3, 57, 28, 0, 295,
		292, 1, 0, 0, 0, 295, 293, 1, 0, 0, 0, 295, 294, 1, 0, 0, 0, 296, 302,
		1, 0, 0, 0, 297, 301, 3, 83, 41, 0, 298, 301, 3, 81, 40, 0, 299, 301, 3,
		57, 28, 0, 300, 297, 1, 0, 0, 0, 300, 298, 1, 0, 0, 0, 300, 299, 1, 0,
		0, 0, 301, 304, 1, 0, 0, 0, 302, 300, 1, 0, 0, 0, 302, 303, 1, 0, 0, 0,
		303, 94, 1, 0, 0, 0, 304, 302, 1, 0, 0, 0, 305, 308, 3, 93, 46, 0, 306,
		308, 3, 15, 7, 0, 307, 305, 1, 0, 0, 0, 307, 306, 1, 0, 0, 0, 308, 96,
		1, 0, 0, 0, 309, 310, 7, 4, 0, 0, 310, 311, 1, 0, 0, 0, 311, 312, 6, 48,
		0, 0, 312, 98, 1, 0, 0, 0, 313, 315, 5, 13, 0, 0, 314, 313, 1, 0, 0, 0,
		314, 315, 1, 0, 0, 0, 315, 316, 1, 0, 0, 0, 316, 317, 5, 10, 0, 0, 317,
		100, 1, 0, 0, 0, 318, 322, 5, 35, 0, 0, 319, 321, 8, 5, 0, 0, 320, 319,
		1, 0, 0, 0, 321, 324, 1, 0, 0, 0, 322, 320, 1, 0, 0, 0, 322, 323, 1, 0,
		0, 0, 323, 325, 1, 0, 0, 0, 324, 322, 1, 0, 0, 0, 325, 326, 3, 99, 49,
		0, 326, 102, 1, 0, 0, 0, 327, 328, 5, 109, 0, 0, 328, 329, 5, 105, 0, 0,
		329, 330, 5, 99, 0, 0, 330, 331, 5, 114, 0, 0, 331, 332, 5, 111, 0, 0,
		332, 333, 5, 115, 0, 0, 333, 334, 5, 101, 0, 0, 334, 335, 5, 99, 0, 0,
		335, 336, 5, 111, 0, 0, 336, 337, 5, 110, 0, 0, 337, 338, 5, 100, 0, 0,
		338, 391, 5, 115, 0, 0, 339, 340, 5, 109, 0, 0, 340, 341, 5, 105, 0, 0,
		341, 342, 5, 108, 0, 0, 342, 343, 5, 108, 0, 0, 343, 344, 5, 105, 0, 0,
		344, 345, 5, 115, 0, 0, 345, 346, 5, 101, 0, 0, 346, 347, 5, 99, 0, 0,
		347, 348, 5, 111, 0, 0, 348, 349, 5, 110, 0, 0, 349, 350, 5, 100, 0, 0,
		350, 391, 5, 115, 0, 0, 351, 352, 5, 115, 0, 0, 352, 353, 5, 101, 0, 0,
		353, 354, 5, 99, 0, 0, 354, 355, 5, 111, 0, 0, 355, 356, 5, 110, 0, 0,
		356, 357, 5, 100, 0, 0, 357, 391, 5, 115, 0, 0, 358, 359, 5, 109, 0, 0,
		359, 360, 5, 105, 0, 0, 360, 361, 5, 110, 0, 0, 361, 362, 5, 117, 0, 0,
		362, 363, 5, 116, 0, 0, 363, 364, 5, 101, 0, 0, 364, 391, 5, 115, 0, 0,
		365, 366, 5, 104, 0, 0, 366, 367, 5, 111, 0, 0, 367, 368, 5, 117, 0, 0,
		368, 369, 5, 114, 0, 0, 369, 391, 5, 115, 0, 0, 370, 371, 5, 100, 0, 0,
		371, 372, 5, 97, 0, 0, 372, 373, 5, 121, 0, 0, 373, 391, 5, 115, 0, 0,
		374, 375, 5, 119, 0, 0, 375, 376, 5, 101, 0, 0, 376, 377, 5, 101, 0, 0,
		377, 378, 5, 107, 0, 0, 378, 391, 5, 115, 0, 0, 379, 380, 5, 109, 0, 0,
		380, 381, 5, 111, 0, 0, 381, 382, 5, 110, 0, 0, 382, 383, 5, 116, 0, 0,
		383, 384, 5, 104, 0, 0, 384, 391, 5, 115, 0, 0, 385, 386, 5, 121, 0, 0,
		386, 387, 5, 101, 0, 0, 387, 388, 5, 97, 0, 0, 388, 389, 5, 114, 0, 0,
		389, 391, 5, 115, 0, 0, 390, 327, 1, 0, 0, 0, 390, 339, 1, 0, 0, 0, 390,
		351, 1, 0, 0, 0, 390, 358, 1, 0, 0, 0, 390, 365, 1, 0, 0, 0, 390, 370,
		1, 0, 0, 0, 390, 374, 1, 0, 0, 0, 390, 379, 1, 0, 0, 0, 390, 385, 1, 0,
		0, 0, 391, 104, 1, 0, 0, 0, 392, 397, 5, 34, 0, 0, 393, 396, 3, 107, 53,
		0, 394, 396, 8, 6, 0, 0, 395, 393, 1, 0, 0, 0, 395, 394, 1, 0, 0, 0, 396,
		399, 1, 0, 0, 0, 397, 398, 1, 0, 0, 0, 397, 395, 1, 0, 0, 0, 398, 400,
		1, 0, 0, 0, 399, 397, 1, 0, 0, 0, 400, 411, 5, 34, 0, 0, 401, 406, 5, 39,
		0, 0, 402, 405, 3, 107, 53, 0, 403, 405, 8, 7, 0, 0, 404, 402, 1, 0, 0,
		0, 404, 403, 1, 0, 0, 0, 405, 408, 1, 0, 0, 0, 406, 407, 1, 0, 0, 0, 406,
		404, 1, 0, 0, 0, 407, 409, 1, 0, 0, 0, 408, 406, 1, 0, 0, 0, 409, 411,
		5, 39, 0, 0, 410, 392, 1, 0, 0, 0, 410, 401, 1, 0, 0, 0, 411, 106, 1, 0,
		0, 0, 412, 413, 5, 92, 0, 0, 413, 418, 7, 8, 0, 0, 414, 418, 3, 109, 54,
		0, 415, 418, 3, 113, 56, 0, 416, 418, 3, 111, 55, 0, 417, 412, 1, 0, 0,
		0, 417, 414, 1, 0, 0, 0, 417, 415, 1, 0, 0, 0, 417, 416, 1, 0, 0, 0, 418,
		108, 1, 0, 0, 0, 419, 420, 5, 92, 0, 0, 420, 421, 5, 117, 0, 0, 421, 422,
		3, 115, 57, 0, 422, 423, 3, 115, 57, 0, 423, 424, 3, 115, 57, 0, 424, 425,
		3, 115, 57, 0, 425, 436, 1, 0, 0, 0, 426, 427, 5, 92, 0, 0, 427, 428, 5,
		117, 0, 0, 428, 429, 5, 123, 0, 0, 429, 430, 3, 115, 57, 0, 430, 431, 3,
		115, 57, 0, 431, 432, 3, 115, 57, 0, 432, 433, 3, 115, 57, 0, 433, 434,
		5, 125, 0, 0, 434, 436, 1, 0, 0, 0, 435, 419, 1, 0, 0, 0, 435, 426, 1,
		0, 0, 0, 436, 110, 1, 0, 0, 0, 437, 438, 5, 92, 0, 0, 438, 439, 7, 9, 0,
		0, 439, 440, 7, 10, 0, 0, 440, 447, 7, 10, 0, 0, 441, 442, 5, 92, 0, 0,
		442, 443, 7, 10, 0, 0, 443, 447, 7, 10, 0, 0, 444, 445, 5, 92, 0, 0, 445,
		447, 7, 10, 0, 0, 446, 437, 1, 0, 0, 0, 446, 441, 1, 0, 0, 0, 446, 444,
		1, 0, 0, 0, 447, 112, 1, 0, 0, 0, 448, 449, 5, 92, 0, 0, 449, 451, 3, 115,
		57, 0, 450, 452, 3, 115, 57, 0, 451, 450, 1, 0, 0, 0, 451, 452, 1, 0, 0,
		0, 452, 114, 1, 0, 0, 0, 453, 454, 7, 11, 0, 0, 454, 116, 1, 0, 0, 0, 29,
		0, 232, 240, 247, 252, 258, 262, 267, 270, 276, 279, 281, 289, 295, 300,
		302, 307, 314, 322, 390, 395, 397, 404, 406, 410, 417, 435, 446, 451, 1,
		6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// preludioLexerInit initializes any static state used to implement preludioLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewpreludioLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func PreludioLexerInit() {
	staticData := &preludiolexerLexerStaticData
	staticData.once.Do(preludiolexerLexerInit)
}

// NewpreludioLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewpreludioLexer(input antlr.CharStream) *preludioLexer {
	PreludioLexerInit()
	l := new(preludioLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &preludiolexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "preludio.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// preludioLexer tokens.
const (
	preludioLexerFUNC                = 1
	preludioLexerPRQL                = 2
	preludioLexerLET                 = 3
	preludioLexerARROW               = 4
	preludioLexerASSIGN              = 5
	preludioLexerPLUS                = 6
	preludioLexerMINUS               = 7
	preludioLexerSTAR                = 8
	preludioLexerPOW                 = 9
	preludioLexerDIV                 = 10
	preludioLexerMOD                 = 11
	preludioLexerMODEL               = 12
	preludioLexerEQ                  = 13
	preludioLexerNE                  = 14
	preludioLexerLE                  = 15
	preludioLexerGE                  = 16
	preludioLexerBAR                 = 17
	preludioLexerCOLON               = 18
	preludioLexerCOMMA               = 19
	preludioLexerDOT                 = 20
	preludioLexerDOLLAR              = 21
	preludioLexerRANGE               = 22
	preludioLexerLANG                = 23
	preludioLexerRANG                = 24
	preludioLexerLBRACKET            = 25
	preludioLexerRBRACKET            = 26
	preludioLexerLPAREN              = 27
	preludioLexerRPAREN              = 28
	preludioLexerUNDERSCORE          = 29
	preludioLexerBACKTICK            = 30
	preludioLexerDOUBLE_QUOTE        = 31
	preludioLexerSINGLE_QUOTE        = 32
	preludioLexerTRIPLE_DOUBLE_QUOTE = 33
	preludioLexerTRIPLE_SINGLE_QUOTE = 34
	preludioLexerAND                 = 35
	preludioLexerOR                  = 36
	preludioLexerNOT                 = 37
	preludioLexerCOALESCE            = 38
	preludioLexerNULL_               = 39
	preludioLexerBOOLEAN             = 40
	preludioLexerINTEGER             = 41
	preludioLexerFLOAT               = 42
	preludioLexerIDENT               = 43
	preludioLexerIDENT_START         = 44
	preludioLexerIDENT_NEXT          = 45
	preludioLexerWHITESPACE          = 46
	preludioLexerNEWLINE             = 47
	preludioLexerCOMMENT             = 48
	preludioLexerINTERVAL_KIND       = 49
	preludioLexerSTRING              = 50
)
