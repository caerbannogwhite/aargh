//+build !noasm !appengine
// AUTO-GENERATED BY C2GOASM -- DO NOT EDIT

TEXT ·_sum_float64_avx_intrinsics(SB), $488-24

    MOVQ vec+0(FP), DI
    MOVQ size+8(FP), SI
    MOVQ res+16(FP), DX
    ADDQ $8, SP

    QUAD $0x000000a824bc8948     // mov    qword [rsp + 168], rdi
    QUAD $0x000000a024b48948     // mov    qword [rsp + 160], rsi
    QUAD $0x0000009824948948     // mov    qword [rsp + 152], rdx
    QUAD $0x000000a024848b48     // mov    rax, qword [rsp + 160]
    WORD $0x008b
    WORD $0xc289
    WORD $0xc283; BYTE $0x03
    WORD $0xc085
    WORD $0xc189
    WORD $0x480f; BYTE $0xca
    WORD $0xe183; BYTE $0xfc
    WORD $0xc829
    LONG $0x94248489; WORD $0x0000; BYTE $0x00
    QUAD $0x000000b02484c748; LONG $0x00000000
    QUAD $0x0000b0248410fbc5; BYTE $0x00
    QUAD $0x0001c8248411fbc5; BYTE $0x00
    QUAD $0x0001c0248411fbc5; BYTE $0x00
    QUAD $0x0001b8248411fbc5; BYTE $0x00
    QUAD $0x0001b0248411fbc5; BYTE $0x00
    QUAD $0x0001c8248c10fbc5; BYTE $0x00
    QUAD $0x0001c0248410fbc5; BYTE $0x00
    LONG $0xc914f9c5
    QUAD $0x0001b8249410fbc5; BYTE $0x00
    QUAD $0x0001b0248410fbc5; BYTE $0x00
    LONG $0xd214f9c5
    LONG $0xc228f8c5
    LONG $0x187de3c4; WORD $0x01c1
    QUAD $0x000180248429fdc5; BYTE $0x00
    QUAD $0x000180248428fdc5; BYTE $0x00
    LONG $0x4429fdc5; WORD $0x6024
    QUAD $0x000000005c2444c7     // mov    dword [rsp + 92], 0
LBB0_1:
    LONG $0x5c24448b
    QUAD $0x000000a0248c8b48     // mov    rcx, qword [rsp + 160]
    WORD $0x098b
    LONG $0x94248c2b; WORD $0x0000; BYTE $0x00
    WORD $0xc839
	JGE LBB0_4
    QUAD $0x000000a824848b48     // mov    rax, qword [rsp + 168]
    LONG $0x244c6348; BYTE $0x5c
    LONG $0x03e1c148
    WORD $0x0148; BYTE $0xc8
    QUAD $0x000000b824848948     // mov    qword [rsp + 184], rax
    QUAD $0x000000b824848b48     // mov    rax, qword [rsp + 184]
    LONG $0x0028fdc5
    LONG $0x4429fdc5; WORD $0x2024
    LONG $0x4c28fdc5; WORD $0x6024
    LONG $0x4428fdc5; WORD $0x2024
    QUAD $0x0000e0248c29fdc5; BYTE $0x00
    QUAD $0x0000c0248429fdc5; BYTE $0x00
    QUAD $0x0000e0248428fdc5; BYTE $0x00
    QUAD $0x0000c0248458fdc5; BYTE $0x00
    LONG $0x4429fdc5; WORD $0x6024
    LONG $0x5c24448b
    WORD $0xc083; BYTE $0x04
    LONG $0x5c244489
	JMP LBB0_1
LBB0_4:
    LONG $0x4428fdc5; WORD $0x6024
    QUAD $0x000120248429fdc5; BYTE $0x00
    QUAD $0x000100248429fdc5; BYTE $0x00
    QUAD $0x000120248428fdc5; BYTE $0x00
    QUAD $0x000100248c28fdc5; BYTE $0x00
    LONG $0xc17cfdc5
    LONG $0x4429fdc5; WORD $0x6024
    LONG $0x4428fdc5; WORD $0x6024
    QUAD $0x000140248429fdc5; BYTE $0x00
    QUAD $0x000140248410fbc5; BYTE $0x00
    LONG $0x4c28fdc5; WORD $0x6024
    QUAD $0x0170248c197de3c4; WORD $0x0000; BYTE $0x01
    QUAD $0x000170248c10fbc5; BYTE $0x00
    LONG $0xc158fbc5
    QUAD $0x0000009824848b48     // mov    rax, qword [rsp + 152]
    LONG $0x0011fbc5
    QUAD $0x000000a024848b48     // mov    rax, qword [rsp + 160]
    WORD $0x008b
    LONG $0x9424842b; WORD $0x0000; BYTE $0x00
    LONG $0x1c244489
LBB0_5:
    LONG $0x1c24448b
    QUAD $0x000000a0248c8b48     // mov    rcx, qword [rsp + 160]
    WORD $0x013b
	JGE LBB0_8
    QUAD $0x000000a824848b48     // mov    rax, qword [rsp + 168]
    LONG $0x244c6348; BYTE $0x1c
    LONG $0x0410fbc5; BYTE $0xc8
    QUAD $0x0000009824848b48     // mov    rax, qword [rsp + 152]
    LONG $0x0058fbc5
    LONG $0x0011fbc5
    LONG $0x1c24448b
    WORD $0xc083; BYTE $0x01
    LONG $0x1c244489
	JMP LBB0_5
LBB0_8:
    SUBQ $8, SP
    VZEROUPPER
    RET




TEXT ·_sum_float64_c(SB), $40-24

    MOVQ vec+0(FP), DI
    MOVQ size+8(FP), SI
    MOVQ res+16(FP), DX
    ADDQ $8, SP

    LONG $0x247c8948; BYTE $0x18
    LONG $0x24748948; BYTE $0x10
    LONG $0x24548948; BYTE $0x08
    QUAD $0x00000000042444c7     // mov    dword [rsp + 4], 0
LBB1_1:
    LONG $0x0424448b
    LONG $0x244c8b48; BYTE $0x10
    WORD $0x013b
	JGE LBB1_4
    LONG $0x24448b48; BYTE $0x18
    LONG $0x244c6348; BYTE $0x04
    LONG $0x0410fbc5; BYTE $0xc8
    LONG $0x24448b48; BYTE $0x08
    LONG $0x0058fbc5
    LONG $0x0011fbc5
    LONG $0x0424448b
    WORD $0xc083; BYTE $0x01
    LONG $0x04244489
	JMP LBB1_1
LBB1_4:
    SUBQ $8, SP
    RET




TEXT ·_sum_grouped_float64_c(SB), $56-40

    MOVQ vec+0(FP), DI
    MOVQ vecSize+8(FP), SI
    MOVQ indeces+16(FP), DX
    MOVQ indecesSize+24(FP), CX
    MOVQ res+32(FP), R8
    ADDQ $8, SP

    LONG $0x247c8948; BYTE $0x28
    LONG $0x24748948; BYTE $0x20
    LONG $0x24548948; BYTE $0x18
    LONG $0x244c8948; BYTE $0x10
    LONG $0x2444894c; BYTE $0x08
    QUAD $0x00000000042444c7     // mov    dword [rsp + 4], 0
LBB2_1:
    LONG $0x0424448b
    LONG $0x244c8b48; BYTE $0x10
    WORD $0x013b
	JGE LBB2_4
    LONG $0x24448b48; BYTE $0x18
    LONG $0x244c6348; BYTE $0x04
    WORD $0x048b; BYTE $0x88
    WORD $0x0489; BYTE $0x24
    LONG $0x24448b48; BYTE $0x28
    LONG $0x240c6348
    LONG $0x0410fbc5; BYTE $0xc8
    LONG $0x24448b48; BYTE $0x08
    LONG $0x0058fbc5
    LONG $0x0011fbc5
    LONG $0x0424448b
    WORD $0xc083; BYTE $0x01
    LONG $0x04244489
	JMP LBB2_1
LBB2_4:
    SUBQ $8, SP
    RET
